// <auto-generated />
using System;
using Calisthenics.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Calisthenics.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250119125310_ModifyExerciseAndWorkoutEntities")]
    partial class ModifyExerciseAndWorkoutEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.ApplicationConfigurationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApplicationConfigurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "AppName",
                            Value = "Calisthenics Coach"
                        },
                        new
                        {
                            Id = 2,
                            Key = "Environment",
                            Value = "Development"
                        });
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.ExerciseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("WorkoutEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutEntityId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("ExperienceLevel")
                        .HasColumnType("integer");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.UserExerciseProgressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan?>("CompletionTime")
                        .HasColumnType("interval");

                    b.Property<int>("ExerciseEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastCompletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProgressStatus")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("RepsCompleted")
                        .HasColumnType("integer");

                    b.Property<int>("SetsCompleted")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<double?>("WeightLifted")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseEntityId");

                    b.HasIndex("UserId");

                    b.ToTable("UserExerciseProgress", (string)null);
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.WorkoutEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.WorkoutProgressionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan?>("AverageCompletionTime")
                        .HasColumnType("interval");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("LevelUpCriteriaMet")
                        .HasColumnType("boolean");

                    b.Property<string>("ProgressStatus")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutsCompleted")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutProgression", (string)null);
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.ExerciseEntity", b =>
                {
                    b.HasOne("Calisthenics.Database.Persistence.Entities.WorkoutEntity", null)
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutEntityId");
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.UserExerciseProgressEntity", b =>
                {
                    b.HasOne("Calisthenics.Database.Persistence.Entities.ExerciseEntity", "ExerciseEntity")
                        .WithMany()
                        .HasForeignKey("ExerciseEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calisthenics.Database.Persistence.Entities.UserEntity", "UserEntity")
                        .WithMany("UserExerciseProgress")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.WorkoutEntity", b =>
                {
                    b.HasOne("Calisthenics.Database.Persistence.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.WorkoutProgressionEntity", b =>
                {
                    b.HasOne("Calisthenics.Database.Persistence.Entities.UserEntity", "UserEntity")
                        .WithMany("WorkoutProgression")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calisthenics.Database.Persistence.Entities.WorkoutEntity", "WorkoutEntity")
                        .WithMany("WorkoutProgression")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");

                    b.Navigation("WorkoutEntity");
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.UserEntity", b =>
                {
                    b.Navigation("UserExerciseProgress");

                    b.Navigation("WorkoutProgression");
                });

            modelBuilder.Entity("Calisthenics.Database.Persistence.Entities.WorkoutEntity", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("WorkoutProgression");
                });
#pragma warning restore 612, 618
        }
    }
}
